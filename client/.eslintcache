[{"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\store\\index.js":"3","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signin.js":"4","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signup.js":"5","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Dashboard.js":"6","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Welcom.js":"7","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Profile.js":"8","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Announce.js":"9","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\index.js":"10","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Layout\\Navbar.js":"11","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionUser.js":"12","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionprofile.js":"13","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\PostProfile.js":"14","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\GetProfile.js":"15","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\action-types.js":"16","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\userReducer.js":"17","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\profileReducer.js":"18","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionAnnouce.js":"19","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\actionTypesAnnouce.js":"20","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\announceReducer.js":"21","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PublicAnnounce.js":"22","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PrivateAnnounce.js":"23"},{"size":494,"mtime":1608505243225,"results":"24","hashOfConfig":"25"},{"size":848,"mtime":1608588958414,"results":"26","hashOfConfig":"25"},{"size":963,"mtime":1608505243281,"results":"27","hashOfConfig":"25"},{"size":2727,"mtime":1608589088085,"results":"28","hashOfConfig":"25"},{"size":3437,"mtime":1608589094988,"results":"29","hashOfConfig":"25"},{"size":2356,"mtime":1608590576363,"results":"30","hashOfConfig":"25"},{"size":955,"mtime":1608583533366,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1608505243208,"results":"32","hashOfConfig":"25"},{"size":540,"mtime":1608505243197,"results":"33","hashOfConfig":"25"},{"size":293,"mtime":1608589029387,"results":"34","hashOfConfig":"25"},{"size":3408,"mtime":1608588903615,"results":"35","hashOfConfig":"25"},{"size":1709,"mtime":1608589064161,"results":"36","hashOfConfig":"25"},{"size":2462,"mtime":1608508777452,"results":"37","hashOfConfig":"25"},{"size":7361,"mtime":1608505243192,"results":"38","hashOfConfig":"25"},{"size":8727,"mtime":1608565913908,"results":"39","hashOfConfig":"25"},{"size":1510,"mtime":1608508777452,"results":"40","hashOfConfig":"25"},{"size":1704,"mtime":1608505243275,"results":"41","hashOfConfig":"25"},{"size":1883,"mtime":1608508777453,"results":"42","hashOfConfig":"25"},{"size":1161,"mtime":1608589875587,"results":"43","hashOfConfig":"25"},{"size":450,"mtime":1608589303322,"results":"44","hashOfConfig":"25"},{"size":1082,"mtime":1608589471360,"results":"45","hashOfConfig":"25"},{"size":2289,"mtime":1608587909403,"results":"46","hashOfConfig":"25"},{"size":3546,"mtime":1608590702365,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q45gtn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\index.js",[],["99","100"],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\store\\index.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signin.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signup.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Dashboard.js",["101","102"],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Welcom.js",["103","104"],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Profile.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Announce.js",["105"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport NavebarePage from '../Components/Layout/Navbar'\r\nconst Announce = () => {\r\n      const token = localStorage.getItem(\"token\");\r\n  \r\n      if (!token) {\r\n            return <Redirect to=\"/\" />\r\n      } else {\r\n            return (\r\n                  <div>\r\n                        <NavebarePage />\r\n                       ghfghfg\r\n                  </div>\r\n            )\r\n      }\r\n      \r\n}\r\n\r\nexport default Announce\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\index.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Layout\\Navbar.js",["106","107"],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionUser.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionprofile.js",["108"],"import {\r\n  POST_PROFILE,\r\n  POST_PROFILE_SUCCESS,\r\n  POST_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE,\r\n  GET_OWNER_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE_SUCCESS,\r\n  EMPTY_PROFILE,\r\n  DELETE_PROFILE_SUCCESS,\r\n  DELETE_PROFILE_FAIL,\r\n  EDIT_PROFILE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAIL,\r\n} from \"../constants/action-types.js\";\r\nimport axios from \"axios\";\r\nimport { EmptyUser } from \"./actionUser.js\";\r\n\r\n// post profile\r\nexport const postProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: POST_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: POST_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: POST_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// update profile\r\nexport const editProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: EDIT_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: EDIT_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: EDIT_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// get owner profile\r\n\r\nexport const getOwnerProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: GET_OWNER_PROFILE });\r\n  try {\r\n    const result = await axios.get(\"/profile/owner\", config);\r\n    dispatsh({ type: GET_OWNER_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({ type: GET_OWNER_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\n// delete profile\r\nexport const deleteProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  \r\n  try {\r\n     const result = await axios.delete(\"/profile\",config);\r\n    dispatsh({ type: DELETE_PROFILE_SUCCESS ,payload:result.data.msg});\r\n  } catch (error) {\r\n    dispatsh({ type: DELETE_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\nexport const EmptyProfile = () => {\r\n  return { type: EMPTY_PROFILE };\r\n};\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\PostProfile.js",["109","110"],"import React, { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { postProfile } from \"../../js/actions/actionprofile\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport \"./PostProfile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 60,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nconst PostProfile = () => {\r\n  const classes = useStyles();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [location, setLocation] = useState();\r\n  const [adresse, setAdresse] = useState();\r\n  const [farmerDomaine, setFarmerDomaine] = useState();\r\n  const [image, setImage] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const data = new FormData();\r\n  data.append(\"location\", location);\r\n  data.append(\"adresse\", adresse);\r\n  data.append(\"farmerDomaine\", farmerDomaine);\r\n  data.append(\"image\", image);\r\n\r\n  const handleChange = (e) => {\r\n    setCountry(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const userName = useSelector(state => state.userReducer.user.name);\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const errors = useSelector((state) => state.profileReducer.errors);\r\n  return (\r\n    <>\r\n      {loadProfile ? (\r\n        <Alert variant=\"filled\" severity=\"info\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2%\",\r\n          right: \"0%\",\r\n       \r\n      }}\r\n        >\r\n        Please Wait\r\n      </Alert>\r\n            \r\n      ) : errors ? (\r\n          <div  style={{\r\n            position: \"fixed\",\r\n            bottom: \"2%\",\r\n            right: \"0%\",\r\n         \r\n        }}>\r\n          <FlashMessage duration={1000}\r\n            \r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\" >\r\n             {errors.message}\r\n           </Alert>\r\n            </FlashMessage>\r\n            </div>\r\n          ):null\r\n      }\r\n    <div className=\"design_post registration-form\"  >\r\n      <h4 className=\"design_title\">BUILD YOUR PROFILE</h4>\r\n      <p className=\"design_info\">\r\n        This information will let us know more about you <i>{userName}</i> .\r\n      </p>\r\n\r\n      <div className=\"design-coordonation\" style={{position:\"relative\"}} >\r\n        <div className=\"design-input-image\">\r\n          <div className=\"form-icon\">\r\n            {image ? (\r\n              <img src={URL.createObjectURL(image)} className=\"form-icon\" />\r\n            ) : (\r\n              <span>\r\n                <i className=\"icon icon-user\" />\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            className=\"file-upload\"\r\n            style={{ position:\"relative\", display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n             \r\n              onChange={(event) => {\r\n                const file = event.target.files[0];\r\n\r\n                setImage(file);\r\n              }}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"design-other-input\"  >\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel  id=\"demo-controlled-open-select-label\">\r\n              Location\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n             \r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={country}\r\n              onChange={(e) => {\r\n                handleChange(e);setLocation(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Béja\"}>Béja</MenuItem>\r\n              <MenuItem value={\"Bizerte\"}>Bizerte</MenuItem>\r\n              <MenuItem value={\"Gabès\"}>Gabès</MenuItem>\r\n              <MenuItem value={\"Gafsa\"}>Gafsa</MenuItem>\r\n              <MenuItem value={\"Jendouba\"}>Jendouba</MenuItem>\r\n              <MenuItem value={\"Kairouan\"}>Kairouan</MenuItem>\r\n              <MenuItem value={\"Kasserine\"}>Kasserine</MenuItem>\r\n              <MenuItem value={\"Kebili\"}>Kebili</MenuItem>\r\n              <MenuItem value={\"Manouba\"}>Manouba</MenuItem>\r\n              <MenuItem value={\"Medenine\"}>Medenine</MenuItem>\r\n              <MenuItem value={\"Monastir\"}>Monastir</MenuItem>\r\n              <MenuItem value={\"Nabeul\"}>Nabeul</MenuItem>\r\n              <MenuItem value={\"Sfax\"}>Sfax</MenuItem>\r\n              <MenuItem value={\"Sidi Bouzid\"}>Sidi Bouzid</MenuItem>\r\n              <MenuItem value={\"Siliana\"}>Siliana</MenuItem>\r\n              <MenuItem value={\"Sousse\"}>Sousse</MenuItem>\r\n              <MenuItem value={\"Tataouine\"}>Tataouine</MenuItem>\r\n              <MenuItem value={\"Tozeur\"}>Tozeur</MenuItem>\r\n              <MenuItem value={\"Tunis\"}>Tunis</MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Zaghouan\"}>Zaghouan</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setAdresse(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Adresse\"\r\n            />\r\n          </form>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setFarmerDomaine(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Farmer Domaine\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-block create-account\"\r\n          onClick={() => dispatch(postProfile(data))}\r\n        >\r\n          Submit Profile\r\n        </button>\r\n      </div>\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default PostProfile;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\GetProfile.js",["111"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { EmptyUser } from \"../../js/actions/actionUser\";\r\nimport { editProfile, EmptyProfile } from \"../../js/actions/actionprofile\";\r\nimport \"./GetProfile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { deleteProfile } from \"../../js/actions/actionprofile\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nfunction GetProfile() {\r\n// state to update profile\r\nconst [location, setLocation] = useState();\r\nconst [adresse, setAdresse] = useState();\r\nconst [farmerDomaine, setFarmerDomaine] = useState();\r\nconst [image, setImage] = useState();\r\nconst data = new FormData();\r\n  data.append(\"location\", location);\r\n  data.append(\"adresse\", adresse);\r\n  data.append(\"farmerDomaine\", farmerDomaine);\r\n  data.append(\"image\", image);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n \r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const token = localStorage.getItem(\"token\");\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleCloseEdit = () => setShowEdit(false);\r\n  const handleShowEdit = () => setShowEdit(true);\r\n  const classes = useStyles();\r\nif (!token) {\r\n    return <Redirect to=\"/\" />;\r\n  } else if (loadProfile) {\r\n    return (\r\n      <Spinner\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    );\r\n  } else {\r\n    return (<div className=\"position-profil\">\r\n      <div className=\"card-item\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-header__bg\"></div>\r\n          <img src={profile.image} className=\"card-header__img\" />\r\n          <div className=\"card-process\">\r\n            {/* button of Edit profile*/}\r\n            <button className=\"process__item\" onClick={() => handleShowEdit()}>\r\n              <div className=\"process-icon follow\">\r\n                <i className=\"far fa-edit\"></i>\r\n              </div>\r\n              <span className=\"process-txt\">Edit</span>\r\n            </button>\r\n            <Modal show={showEdit} onHide={handleCloseEdit} centered>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Update profile</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Change your picture:\r\n              <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n             \r\n              onChange={(event) => {\r\n                const file = event.target.files[0];\r\n\r\n                setImage(file);\r\n              }}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n              <br/>\r\n                Choose your Country:\r\n                <Form.Control as=\"select\" className=\"mb-4\"\r\n                  onChange={(e)=>setLocation(e.target.value)}   \r\n                >\r\n                  <option value={\"Ariana\"}>Ariana</option>\r\n                  <option value={\"Béja\"}>Béja</option>\r\n                  <option value={\"Bizerte\"}>Bizerte</option>\r\n                  <option value={\"Gabès\"}>Gabès</option>\r\n                  <option value={\"Gafsa\"}>Gafsa</option>\r\n                  <option value={\"Jendouba\"}>Jendouba</option>\r\n                  <option value={\"Kairouan\"}>Kairouan</option>\r\n                  <option value={\"Kasserine\"}>Kasserine</option>\r\n                  <option value={\"Kebili\"}>Kebili</option>\r\n                  <option value={\"Manouba\"}>Manouba</option>\r\n                  <option value={\"Medenine\"}>Medenine</option>\r\n                  <option value={\"Monastir\"}>Monastir</option>\r\n                  <option value={\"Nabeul\"}>Nabeul</option>\r\n                  <option value={\"Sfax\"}>Sfax</option>\r\n                  <option value={\"Sidi Bouzid\"}>Sidi Bouzid</option>\r\n                  <option value={\"Siliana\"}>Siliana</option>\r\n                  <option value={\"Sousse\"}>Sousse</option>\r\n                  <option value={\"Tataouine\"}>Tataouine</option>\r\n                  <option value={\"Tozeur\"}>Tozeur</option>\r\n                  <option value={\"Tunis\"}>Tunis</option>\r\n                  <option value={\"Zaghouan\"}>Zaghouan</option>\r\n                </Form.Control>\r\n                Adresse:\r\n                <Form.Control\r\n                  onChange={(e)=>setAdresse(e.target.value)} \r\n                  type=\"text\"\r\n                  className=\"mb-4\"\r\n                  placeholder=\"Normal text\"\r\n                />\r\n                Farmer Domaine :\r\n                <Form.Control type=\"text\" placeholder=\"Normal text\" \r\n                onChange={(e)=>setFarmerDomaine(e.target.value)} \r\n                \r\n                />\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => {\r\n                    dispatch(editProfile(data));\r\n                     handleCloseEdit();\r\n                     \r\n                }}>\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            {/* button of delete profile */}\r\n            <button\r\n              onClick={() => {\r\n                handleShow();\r\n              }}\r\n              className=\"process__item\"\r\n            >\r\n              <div className=\"process-icon message\">\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n              </div>\r\n              <span className=\"process-txt\">Delete</span>\r\n            </button>\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Are you sure you want to delete your account\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    handleClose();\r\n                    dispatch(deleteProfile());\r\n                    history.push(\"/\");\r\n                    dispatch(EmptyProfile());\r\n                    dispatch(EmptyUser());\r\n                    localStorage.clear();\r\n                  }}\r\n                >\r\n                  Yes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n          {/* info of user */}\r\n          <div className=\"card-header__text\">\r\n            <span className=\"card-header__name\">{user.name}</span>\r\n            <span className=\"card-header__job\">Phone:{user.phoneNumber}</span>\r\n            <span className=\"card-header__job\">email:{user.email}</span>\r\n          </div>\r\n        </div>\r\n        <ul className=\"card-detail\">\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">Location:</p>\r\n            <p className=\"card-detail__str\">{profile.location}</p>\r\n          </li>\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">adresse:</p>\r\n            <p className=\"card-detail__str\">{profile.adresse}</p>\r\n          </li>\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">Farmer Domaine:</p>\r\n            <ul>\r\n              {profile.farmerDomaine.map((e, i) => (\r\n                <li key={i} className=\"card-detail__str1\" colSpan=\"2\">\r\n                  {e}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <i className=\"card-header__icon\">CreatedAt:{profile.updatedAt}</i>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetProfile;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\action-types.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\userReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\profileReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionAnnouce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\actionTypesAnnouce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\announceReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PublicAnnounce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PrivateAnnounce.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":25,"column":9,"nodeType":"118","messageId":"119","endLine":25,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":30,"column":6,"nodeType":"122","endLine":30,"endColumn":8,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"117","line":13,"column":9,"nodeType":"118","messageId":"119","endLine":13,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":17,"column":6,"nodeType":"122","endLine":17,"endColumn":8,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"125","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"127","line":14,"column":3,"nodeType":"118","messageId":"119","endLine":14,"endColumn":15},{"ruleId":"116","severity":1,"message":"128","line":16,"column":10,"nodeType":"118","messageId":"119","endLine":16,"endColumn":19},{"ruleId":"116","severity":1,"message":"129","line":62,"column":9,"nodeType":"118","messageId":"119","endLine":62,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":106,"column":15,"nodeType":"132","endLine":106,"endColumn":77},{"ruleId":"130","severity":1,"message":"131","line":64,"column":11,"nodeType":"132","endLine":64,"endColumn":67},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["135"],["136"],"'useSelector' is defined but never used.","'Component' is defined but never used.","'MDBContainer' is defined but never used.","'EmptyUser' is defined but never used.","'profile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},{"range":"142","text":"141"},[1373,1375],"[dispatch]",[705,707]]