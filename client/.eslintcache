[{"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\store\\index.js":"3","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signin.js":"4","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signup.js":"5","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Welcom.js":"6","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Dashboard.js":"7","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Profile.js":"8","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Announce.js":"9","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\index.js":"10","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionUser.js":"11","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionprofile.js":"12","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionAnnouce.js":"13","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\PostProfile.js":"14","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\GetProfile.js":"15","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Layout\\Navbar.js":"16","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PublicAnnounce.js":"17","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PrivateAnnounce.js":"18","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\userReducer.js":"19","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\action-types.js":"20","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\announceReducer.js":"21","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\profileReducer.js":"22","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\actionTypesAnnouce.js":"23","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\AnnounceDetails\\AnnounceDetails.js":"24","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\AnnounceDetails\\CarroucelAnnounce.js":"25","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\PostAnnounces\\PostAnnounces.js":"26","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\CreateAnnounce.js":"27"},{"size":494,"mtime":1608505243225,"results":"28","hashOfConfig":"29"},{"size":962,"mtime":1608812902028,"results":"30","hashOfConfig":"29"},{"size":963,"mtime":1608505243281,"results":"31","hashOfConfig":"29"},{"size":2813,"mtime":1608660654951,"results":"32","hashOfConfig":"29"},{"size":3437,"mtime":1608591155408,"results":"33","hashOfConfig":"29"},{"size":1055,"mtime":1608660654960,"results":"34","hashOfConfig":"29"},{"size":2717,"mtime":1608755236566,"results":"35","hashOfConfig":"29"},{"size":1308,"mtime":1608754571815,"results":"36","hashOfConfig":"29"},{"size":674,"mtime":1608754914690,"results":"37","hashOfConfig":"29"},{"size":293,"mtime":1608591155459,"results":"38","hashOfConfig":"29"},{"size":1709,"mtime":1608589064161,"results":"39","hashOfConfig":"29"},{"size":2462,"mtime":1608508777452,"results":"40","hashOfConfig":"29"},{"size":2945,"mtime":1608814381416,"results":"41","hashOfConfig":"29"},{"size":7361,"mtime":1608505243192,"results":"42","hashOfConfig":"29"},{"size":8736,"mtime":1608660654926,"results":"43","hashOfConfig":"29"},{"size":3580,"mtime":1608813627114,"results":"44","hashOfConfig":"29"},{"size":2292,"mtime":1608754571784,"results":"45","hashOfConfig":"29"},{"size":3806,"mtime":1608754571780,"results":"46","hashOfConfig":"29"},{"size":1704,"mtime":1608505243275,"results":"47","hashOfConfig":"29"},{"size":1510,"mtime":1608508777452,"results":"48","hashOfConfig":"29"},{"size":2426,"mtime":1608846680571,"results":"49","hashOfConfig":"29"},{"size":1877,"mtime":1608754571835,"results":"50","hashOfConfig":"29"},{"size":1129,"mtime":1608813887707,"results":"51","hashOfConfig":"29"},{"size":4213,"mtime":1608754571769,"results":"52","hashOfConfig":"29"},{"size":1212,"mtime":1608754571775,"results":"53","hashOfConfig":"29"},{"size":4659,"mtime":1608850868573,"results":"54","hashOfConfig":"29"},{"size":485,"mtime":1608813033539,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1q45gtn",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\index.js",[],["119","120"],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\store\\index.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signin.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Signup.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Welcom.js",["121","122"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PublicAnnounce from \"../Components/Announce/PublicAnnounce\";\r\nimport NavbarPage from \"../Components/Layout/Navbar\";\r\nimport { getPublicAnnounce } from \"../js/actions/actionAnnouce\";\r\nimport \"./welcom.css\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst Welcom = () => {\r\n  const dispatch = useDispatch();\r\n  const pubAnnounce = useSelector((state) => state.announceReducer.announce);\r\n  const loadAnnounce = useSelector(\r\n    (state) => state.announceReducer.loadAnnounce\r\n  );\r\n  const errors = useSelector((state) => state.announceReducer.errors);\r\nconsole.log(pubAnnounce)\r\n  useEffect(() => {\r\n    dispatch(getPublicAnnounce());\r\n  }, []);\r\n\r\n  return (\r\n  <>\r\n  <NavbarPage />\r\n    <div className=\"design-pubAnnounce\">\r\n{loadAnnounce ?<CircularProgress disableShrink />:pubAnnounce&&pubAnnounce.map((el,i)=>\r\n      <PublicAnnounce announce={el} key={i}/>)}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcom;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Dashboard.js",["123","124"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUser } from \"../js/actions/actionUser\";\r\nimport { useEffect } from \"react\";\r\nimport PostProfile from \"../Components/Profile/PostProfile\";\r\nimport { getOwnerProfile } from \"../js/actions/actionprofile\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport \"./Dashboard.css\";\r\nimport NavbarPage from \"../Components/Layout/Navbar\";\r\nimport { getPrivateAnnounce } from \"../js/actions/actionAnnouce\";\r\nimport PrivateAnnounce from \"../Components/Announce/PrivateAnnounce\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst Dashboard = () => {\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const loadUser = useSelector((state) => state.userReducer.loadUser);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const dispatch = useDispatch();\r\n  const announce = useSelector((state) => state.announceReducer.announce);\r\n  const loadAnnounce = useSelector(\r\n    (state) => state.announceReducer.loadAnnounce\r\n  );\r\n  const errors = useSelector((state) => state.announceReducer.errors);\r\n  useEffect(() => {\r\n    dispatch(getOwnerProfile());\r\n    dispatch(getUser());\r\n    dispatch(getPrivateAnnounce());\r\n  }, []);\r\n  if (loadProfile && loadUser) {\r\n    return (\r\n      <>\r\n        <NavbarPage />\r\n        <Spinner\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n          }}\r\n          color=\"primary\"\r\n        />\r\n      </>\r\n    );\r\n  } else if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <NavbarPage />\r\n        <FlashMessage duration={2000}>\r\n        <Alert variant=\"outlined\" severity=\"success\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2%\",\r\n          right: \"0%\",\r\n        }}>\r\n            Welcome {user.name} we are happy to see you\r\n          </Alert>\r\n        </FlashMessage>\r\n        \r\n        {!profile ? (\r\n          <div className=\"design-postProfile\">\r\n            <PostProfile />\r\n          </div>\r\n        ) : (loadAnnounce) ? (\r\n          <CircularProgress disableShrink />\r\n        ) : (\r\n              <div className=\"design-privAnnounce\">\r\n                {\r\n                  announce.map((el, i) =>\r\n                    <PrivateAnnounce announce={el} key={i} />)}\r\n              </div>\r\n     \r\n            )\r\n        \r\n        }\r\n      </div>)\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Profile.js",["125"],"import React,{useEffect} from 'react'\r\nimport GetProfile from '../Components/Profile/GetProfile'\r\nimport NavebarePage from '../Components/Layout/Navbar'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getPrivateUserAnnounce } from '../js/actions/actionAnnouce';\r\nimport PrivateAnnounce from '../Components/Announce/PrivateAnnounce';\r\nimport './Profile.css';\r\nimport { getUser } from '../js/actions/actionUser';\r\nconst Profile = () => {\r\n      const announce = useSelector(state => state.announceReducer.announce);\r\n  \r\n      const dispatch = useDispatch()\r\n      useEffect(() => {\r\n         dispatch(getUser());\r\n         dispatch(getPrivateUserAnnounce())\r\n            \r\n      }, [])\r\n      if (localStorage.getItem(\"token\")) {\r\n          return  (<div>\r\n                <NavebarePage />\r\n                <div className=\"paddingAnnounce\">\r\n                <GetProfile />\r\n            <div className=\"userAnnounce\">\r\n                {announce.map((el, i) => (\r\n                      <PrivateAnnounce announce={el} key={i} />\r\n                ) )}\r\n                      </div>\r\n                      </div>\r\n            </div>)\r\n      }\r\n            \r\n     return  <Redirect to=\"/Dashboard\" />\r\n                       \r\n}\r\nexport default Profile\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\Announce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\index.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionUser.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionprofile.js",["126"],"import {\r\n  POST_PROFILE,\r\n  POST_PROFILE_SUCCESS,\r\n  POST_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE,\r\n  GET_OWNER_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE_SUCCESS,\r\n  EMPTY_PROFILE,\r\n  DELETE_PROFILE_SUCCESS,\r\n  DELETE_PROFILE_FAIL,\r\n  EDIT_PROFILE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAIL,\r\n} from \"../constants/action-types.js\";\r\nimport axios from \"axios\";\r\nimport { EmptyUser } from \"./actionUser.js\";\r\n\r\n// post profile\r\nexport const postProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: POST_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: POST_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: POST_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// update profile\r\nexport const editProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: EDIT_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: EDIT_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: EDIT_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// get owner profile\r\n\r\nexport const getOwnerProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: GET_OWNER_PROFILE });\r\n  try {\r\n    const result = await axios.get(\"/profile/owner\", config);\r\n    dispatsh({ type: GET_OWNER_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({ type: GET_OWNER_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\n// delete profile\r\nexport const deleteProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  \r\n  try {\r\n     const result = await axios.delete(\"/profile\",config);\r\n    dispatsh({ type: DELETE_PROFILE_SUCCESS ,payload:result.data.msg});\r\n  } catch (error) {\r\n    dispatsh({ type: DELETE_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\nexport const EmptyProfile = () => {\r\n  return { type: EMPTY_PROFILE };\r\n};\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\actions\\actionAnnouce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\PostProfile.js",["127","128"],"import React, { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { postProfile } from \"../../js/actions/actionprofile\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport \"./PostProfile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 60,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nconst PostProfile = () => {\r\n  const classes = useStyles();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [location, setLocation] = useState();\r\n  const [adresse, setAdresse] = useState();\r\n  const [farmerDomaine, setFarmerDomaine] = useState();\r\n  const [image, setImage] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const data = new FormData();\r\n  data.append(\"location\", location);\r\n  data.append(\"adresse\", adresse);\r\n  data.append(\"farmerDomaine\", farmerDomaine);\r\n  data.append(\"image\", image);\r\n\r\n  const handleChange = (e) => {\r\n    setCountry(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const userName = useSelector(state => state.userReducer.user.name);\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const errors = useSelector((state) => state.profileReducer.errors);\r\n  return (\r\n    <>\r\n      {loadProfile ? (\r\n        <Alert variant=\"filled\" severity=\"info\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2%\",\r\n          right: \"0%\",\r\n       \r\n      }}\r\n        >\r\n        Please Wait\r\n      </Alert>\r\n            \r\n      ) : errors ? (\r\n          <div  style={{\r\n            position: \"fixed\",\r\n            bottom: \"2%\",\r\n            right: \"0%\",\r\n         \r\n        }}>\r\n          <FlashMessage duration={1000}\r\n            \r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\" >\r\n             {errors.message}\r\n           </Alert>\r\n            </FlashMessage>\r\n            </div>\r\n          ):null\r\n      }\r\n    <div className=\"design_post registration-form\"  >\r\n      <h4 className=\"design_title\">BUILD YOUR PROFILE</h4>\r\n      <p className=\"design_info\">\r\n        This information will let us know more about you <i>{userName}</i> .\r\n      </p>\r\n\r\n      <div className=\"design-coordonation\" style={{position:\"relative\"}} >\r\n        <div className=\"design-input-image\">\r\n          <div className=\"form-icon\">\r\n            {image ? (\r\n              <img src={URL.createObjectURL(image)} className=\"form-icon\" />\r\n            ) : (\r\n              <span>\r\n                <i className=\"icon icon-user\" />\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            className=\"file-upload\"\r\n            style={{ position:\"relative\", display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n             \r\n              onChange={(event) => {\r\n                const file = event.target.files[0];\r\n\r\n                setImage(file);\r\n              }}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"design-other-input\"  >\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel  id=\"demo-controlled-open-select-label\">\r\n              Location\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n             \r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={country}\r\n              onChange={(e) => {\r\n                handleChange(e);setLocation(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Béja\"}>Béja</MenuItem>\r\n              <MenuItem value={\"Bizerte\"}>Bizerte</MenuItem>\r\n              <MenuItem value={\"Gabès\"}>Gabès</MenuItem>\r\n              <MenuItem value={\"Gafsa\"}>Gafsa</MenuItem>\r\n              <MenuItem value={\"Jendouba\"}>Jendouba</MenuItem>\r\n              <MenuItem value={\"Kairouan\"}>Kairouan</MenuItem>\r\n              <MenuItem value={\"Kasserine\"}>Kasserine</MenuItem>\r\n              <MenuItem value={\"Kebili\"}>Kebili</MenuItem>\r\n              <MenuItem value={\"Manouba\"}>Manouba</MenuItem>\r\n              <MenuItem value={\"Medenine\"}>Medenine</MenuItem>\r\n              <MenuItem value={\"Monastir\"}>Monastir</MenuItem>\r\n              <MenuItem value={\"Nabeul\"}>Nabeul</MenuItem>\r\n              <MenuItem value={\"Sfax\"}>Sfax</MenuItem>\r\n              <MenuItem value={\"Sidi Bouzid\"}>Sidi Bouzid</MenuItem>\r\n              <MenuItem value={\"Siliana\"}>Siliana</MenuItem>\r\n              <MenuItem value={\"Sousse\"}>Sousse</MenuItem>\r\n              <MenuItem value={\"Tataouine\"}>Tataouine</MenuItem>\r\n              <MenuItem value={\"Tozeur\"}>Tozeur</MenuItem>\r\n              <MenuItem value={\"Tunis\"}>Tunis</MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Zaghouan\"}>Zaghouan</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setAdresse(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Adresse\"\r\n            />\r\n          </form>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setFarmerDomaine(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Farmer Domaine\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-block create-account\"\r\n          onClick={() => dispatch(postProfile(data))}\r\n        >\r\n          Submit Profile\r\n        </button>\r\n      </div>\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default PostProfile;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Profile\\GetProfile.js",["129"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { EmptyUser } from \"../../js/actions/actionUser\";\r\nimport { editProfile, EmptyProfile } from \"../../js/actions/actionprofile\";\r\nimport \"./GetProfile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { deleteProfile } from \"../../js/actions/actionprofile\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nfunction GetProfile() {\r\n// state to update profile\r\nconst [location, setLocation] = useState();\r\nconst [adresse, setAdresse] = useState();\r\nconst [farmerDomaine, setFarmerDomaine] = useState();\r\nconst [image, setImage] = useState();\r\nconst data = new FormData();\r\n  data.append(\"location\", location);\r\n  data.append(\"adresse\", adresse);\r\n  data.append(\"farmerDomaine\", farmerDomaine);\r\n  data.append(\"image\", image);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n \r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const token = localStorage.getItem(\"token\");\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleCloseEdit = () => setShowEdit(false);\r\n  const handleShowEdit = () => setShowEdit(true);\r\n  const classes = useStyles();\r\nif (!token) {\r\n    return <Redirect to=\"/\" />;\r\n  } else if (loadProfile) {\r\n    return (\r\n      <Spinner\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n        }}\r\n        color=\"primary\"\r\n      />\r\n    );\r\n  } else {\r\n    return (<div className=\"position-profil\">\r\n      <div className=\"card-item\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-header__bg\"></div>\r\n          <img src={profile.image} className=\"card-header__img\" />\r\n          <div className=\"card-process\">\r\n            {/* button of Edit profile*/}\r\n            <button className=\"process__item\" onClick={() => handleShowEdit()}>\r\n              <div className=\"process-icon follow\">\r\n                <i className=\"far fa-edit\"></i>\r\n              </div>\r\n              <span className=\"process-txt\">Edit</span>\r\n            </button>\r\n            <Modal show={showEdit} onHide={handleCloseEdit} centered>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Update profile</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Change your picture:\r\n              <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n             \r\n              onChange={(event) => {\r\n                const file = event.target.files[0];\r\n\r\n                setImage(file);\r\n              }}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n              <br/>\r\n                Choose your Country:\r\n                <Form.Control as=\"select\" className=\"mb-4\"\r\n                  onChange={(e)=>setLocation(e.target.value)}   \r\n                >\r\n                  <option value={\"Ariana\"}>Ariana</option>\r\n                  <option value={\"Béja\"}>Béja</option>\r\n                  <option value={\"Bizerte\"}>Bizerte</option>\r\n                  <option value={\"Gabès\"}>Gabès</option>\r\n                  <option value={\"Gafsa\"}>Gafsa</option>\r\n                  <option value={\"Jendouba\"}>Jendouba</option>\r\n                  <option value={\"Kairouan\"}>Kairouan</option>\r\n                  <option value={\"Kasserine\"}>Kasserine</option>\r\n                  <option value={\"Kebili\"}>Kebili</option>\r\n                  <option value={\"Manouba\"}>Manouba</option>\r\n                  <option value={\"Medenine\"}>Medenine</option>\r\n                  <option value={\"Monastir\"}>Monastir</option>\r\n                  <option value={\"Nabeul\"}>Nabeul</option>\r\n                  <option value={\"Sfax\"}>Sfax</option>\r\n                  <option value={\"Sidi Bouzid\"}>Sidi Bouzid</option>\r\n                  <option value={\"Siliana\"}>Siliana</option>\r\n                  <option value={\"Sousse\"}>Sousse</option>\r\n                  <option value={\"Tataouine\"}>Tataouine</option>\r\n                  <option value={\"Tozeur\"}>Tozeur</option>\r\n                  <option value={\"Tunis\"}>Tunis</option>\r\n                  <option value={\"Zaghouan\"}>Zaghouan</option>\r\n                </Form.Control>\r\n                Adresse:\r\n                <Form.Control\r\n                  onChange={(e)=>setAdresse(e.target.value)} \r\n                  type=\"text\"\r\n                  className=\"mb-4\"\r\n                  placeholder=\"Normal text\"\r\n                />\r\n                Farmer Domaine :\r\n                <Form.Control type=\"text\" placeholder=\"Normal text\" \r\n                onChange={(e)=>setFarmerDomaine(e.target.value)} \r\n                \r\n                />\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => {\r\n                    dispatch(editProfile(data));\r\n                     handleCloseEdit();\r\n                     \r\n                }}>\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            {/* button of delete profile */}\r\n            <button\r\n              onClick={() => {\r\n                handleShow();\r\n              }}\r\n              className=\"process__item\"\r\n            >\r\n              <div className=\"process-icon message\">\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n              </div>\r\n              <span className=\"process-txt\">Delete</span>\r\n            </button>\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Warning</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Are you sure you want to delete your account\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    handleClose();\r\n                    dispatch(deleteProfile());\r\n                    history.push(\"/\");\r\n                    dispatch(EmptyProfile());\r\n                    dispatch(EmptyUser());\r\n                    localStorage.clear();\r\n                  }}\r\n                >\r\n                  Yes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n          {/* info of user */}\r\n          <div className=\"card-header__text\">\r\n            <span className=\"card-header__name\">{user.name}</span>\r\n            <span className=\"card-header__job\">Phone:{user.phoneNumber}</span>\r\n            <span className=\"card-header__job\">email:{user.email}</span>\r\n          </div>\r\n        </div>\r\n        <ul className=\"card-detail\">\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">Location:</p>\r\n            <p className=\"card-detail__str\">{profile.location}</p>\r\n          </li>\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">adresse:</p>\r\n            <p className=\"card-detail__str\">{profile.adresse}</p>\r\n          </li>\r\n          <li className=\"card-detail__li\">\r\n            <p className=\"card-detail__txt\">Farmer Domaine:</p>\r\n            <ul>\r\n              {profile&&profile.farmerDomaine.map((e, i) => (\r\n                <li key={i} className=\"card-detail__str1\" colSpan=\"2\">\r\n                  {e}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <i className=\"card-header__icon\">CreatedAt:{profile.updatedAt}</i>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetProfile;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Layout\\Navbar.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PublicAnnounce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\Announce\\PrivateAnnounce.js",["130","131"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    marginTop: 55,\r\n    \r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nfunction PrivateAnnounce({ announce }) {\r\n  const { productCategory,\r\n    Description,\r\n    productName,\r\n    quantity,\r\n    price,\r\n    productImages,\r\n    updatedAt,\r\n    user,\r\n    userImage,\r\n    _id\r\n  } = announce\r\n  const { name,\r\n    email,\r\n    phoneNumber,\r\n   \r\n  } = user;\r\n  console.log(name, email, phoneNumber)\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n//usehistory\r\nconst history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n      \r\n      <CardActionArea onClick={()=>history.push(`/announce/${_id}`)}>\r\n      \r\n        <CardHeader\r\n          avatar={\r\n            <Avatar alt=\"Travis Howard\" src={userImage} />\r\n          }\r\n          \r\n          title={productName}\r\n          subheader={updatedAt}\r\n        />\r\n        <CardMedia\r\n            component=\"img\"\r\n            alt=\"productImage\"\r\n            height=\"140\"\r\n            image={productImages[0]}\r\n            title=\"productImage\"\r\n          />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Price:{quantity}<br/>\r\n            Price:{price}<br/>\r\n            Description:{Description}\r\n          </Typography>\r\n          </CardContent>\r\n          </CardActionArea>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"add a comment\">\r\n          <i class=\"far fa-comment-dots\"></i>\r\n          </IconButton>\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n            </CardActions>\r\n           \r\n         \r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>Contact:</Typography>\r\n            <Typography paragraph>\r\n              Phone:{phoneNumber}<br/>\r\n              email:{email}\r\n              </Typography>\r\n          </CardContent>\r\n          </Collapse>\r\n        \r\n      </Card>\r\n          \r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateAnnounce;\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\userReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\action-types.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\announceReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\reducers\\profileReducer.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\js\\constants\\actionTypesAnnouce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\AnnounceDetails\\AnnounceDetails.js",["132","133"],"import React,{useEffect} from 'react'\r\nimport { getAnnounceById } from '../../js/actions/actionAnnouce';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./AnnounceDetails.css\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CarroucelAnnounce from './CarroucelAnnounce';\r\nimport {Table} from 'react-bootstrap'\r\nconst AnnounceDetails = ({id}) => {\r\n  const announceid = useSelector(state => state.announceReducer.announceid);\r\n  const loadAnnounceid = useSelector(state => state.announceReducer.loadAnnounceid);\r\n  \r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n        dispatch(getAnnounceById(id))\r\n        \r\n      }, [id])\r\n  \r\nconst { productCategory,\r\n    Description,\r\n    productName,\r\n    quantity,\r\n    price,\r\n    productImages,\r\n    updatedAt,\r\n    user,\r\n    userImage,\r\n   \r\n  } = announceid\r\n  \r\n\r\n\r\n  return (\r\n    (loadAnnounceid)?(<FlashMessage duration={1000}>\r\n      <Alert variant=\"outlined\" severity=\"success\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2%\",\r\n          right: \"0%\",\r\n        }}>\r\n        Please Wait\r\n       </Alert>\r\n      </FlashMessage>):\r\n      (<div className=\"Container\">\r\n        <CarroucelAnnounce productImages={productImages} />\r\n        <Table striped bordered hover>\r\n          <thead>\r\n          <tr style={{\r\n              backgroundColor: \"Navy\",\r\n              textAlign: \"center\",\r\n              color:\"white\"\r\n            }}>\r\n      \r\n      <td colSpan=\"3\">Product Details</td>\r\n      \r\n    </tr>\r\n    <tr>\r\n      <th>N°</th>\r\n      <th>Item</th>\r\n              <th\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >Datum</th>\r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      <tr>\r\n      <td>1</td>\r\n      <td>Category</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{productCategory}</td>\r\n     \r\n      \r\n    </tr>\r\n    <tr>\r\n    <td>2</td>\r\n      <td>Name</td>\r\n              <td\r\n                style={{\r\n                  textAlign: \"center\"\r\n                  \r\n                }}\r\n              >{productName}</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td>Quantity</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{quantity}</td>\r\n            </tr>\r\n            <tr>\r\n             <td>4</td>\r\n              <td>Price</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{price}</td>\r\n            </tr>\r\n            <tr>\r\n            <td>5</td>\r\n      <td>Description</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{Description}</td>\r\n            </tr>\r\n            \r\n            <tr style={{\r\n              backgroundColor: \"Navy\",\r\n              textAlign: \"center\",\r\n              color:\"white\"\r\n            }}>\r\n      \r\n      <td colSpan=\"3\">Seller Details</td>\r\n      \r\n    </tr>\r\n      <tr>\r\n      <td>6</td>\r\n      <td>SellerName</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{user&&user.name}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>7</td>\r\n      <td>Email</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{user&&user.email}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>8</td>\r\n      <td>Phone</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{user&&user.phoneNumber}</td>\r\n      </tr>\r\n      <tr>\r\n      <td>9</td>\r\n      <td>CreatedAt</td>\r\n              <td\r\n              style={{\r\n                textAlign: \"center\"\r\n                \r\n              }}\r\n              >{updatedAt}</td>\r\n      </tr>\r\n           \r\n  </tbody>\r\n</Table>\r\n                  \r\n            </div>\r\n   \r\n    \r\n    \r\n      )\r\n  )\r\n}\r\n\r\nexport default AnnounceDetails\r\n\r\n","C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\AnnounceDetails\\CarroucelAnnounce.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Components\\PostAnnounces\\PostAnnounces.js",[],"C:\\Users\\Asus\\Desktop\\appvente\\client\\src\\Pages\\CreateAnnounce.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":14,"column":9,"nodeType":"140","messageId":"141","endLine":14,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":18,"column":6,"nodeType":"144","endLine":18,"endColumn":8,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"139","line":26,"column":9,"nodeType":"140","messageId":"141","endLine":26,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":31,"column":6,"nodeType":"144","endLine":31,"endColumn":8,"suggestions":"146"},{"ruleId":"142","severity":1,"message":"143","line":18,"column":10,"nodeType":"144","endLine":18,"endColumn":12,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"148","line":16,"column":10,"nodeType":"140","messageId":"141","endLine":16,"endColumn":19},{"ruleId":"138","severity":1,"message":"149","line":62,"column":9,"nodeType":"140","messageId":"141","endLine":62,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":106,"column":15,"nodeType":"152","endLine":106,"endColumn":77},{"ruleId":"150","severity":1,"message":"151","line":64,"column":11,"nodeType":"152","endLine":64,"endColumn":67},{"ruleId":"138","severity":1,"message":"153","line":16,"column":10,"nodeType":"140","messageId":"141","endLine":16,"endColumn":14},{"ruleId":"138","severity":1,"message":"154","line":45,"column":11,"nodeType":"140","messageId":"141","endLine":45,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":17,"column":10,"nodeType":"144","endLine":17,"endColumn":14,"suggestions":"155"},{"ruleId":"138","severity":1,"message":"156","line":27,"column":5,"nodeType":"140","messageId":"141","endLine":27,"endColumn":14},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["159"],["160"],["161"],"'EmptyUser' is defined but never used.","'profile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'productCategory' is assigned a value but never used.",["162"],"'userImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"163","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},{"range":"171","text":"170"},{"range":"172","text":"170"},"Update the dependencies array to be: [dispatch, id]",{"range":"173","text":"174"},[774,776],"[dispatch]",[1484,1486],[742,744],[701,705],"[dispatch, id]"]