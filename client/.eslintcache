[{"E:\\mern\\appvente\\client\\src\\index.js":"1","E:\\mern\\appvente\\client\\src\\App.js":"2","E:\\mern\\appvente\\client\\src\\js\\store\\index.js":"3","E:\\mern\\appvente\\client\\src\\Pages\\Dashboard.js":"4","E:\\mern\\appvente\\client\\src\\Pages\\Signup.js":"5","E:\\mern\\appvente\\client\\src\\Pages\\Welcom.js":"6","E:\\mern\\appvente\\client\\src\\Pages\\Signin.js":"7","E:\\mern\\appvente\\client\\src\\Pages\\Announce.js":"8","E:\\mern\\appvente\\client\\src\\Pages\\Profile.js":"9","E:\\mern\\appvente\\client\\src\\Components\\Layout\\Sidebar.js":"10","E:\\mern\\appvente\\client\\src\\js\\reducers\\index.js":"11","E:\\mern\\appvente\\client\\src\\Components\\Layout\\Navbar.js":"12","E:\\mern\\appvente\\client\\src\\js\\actions\\actionToggle.js":"13","E:\\mern\\appvente\\client\\src\\Components\\Profile\\GetProfile.js":"14","E:\\mern\\appvente\\client\\src\\js\\actions\\actionUser.js":"15","E:\\mern\\appvente\\client\\src\\Components\\Profile\\PostProfile.js":"16","E:\\mern\\appvente\\client\\src\\js\\actions\\actionprofile.js":"17","E:\\mern\\appvente\\client\\src\\js\\constants\\action-types.js":"18","E:\\mern\\appvente\\client\\src\\js\\reducers\\profileReducer.js":"19","E:\\mern\\appvente\\client\\src\\js\\reducers\\toggleReducer.js":"20","E:\\mern\\appvente\\client\\src\\js\\reducers\\userReducer.js":"21","E:\\mern\\appvente\\client\\src\\js\\constants\\toggle-type.js":"22"},{"size":494,"mtime":1608473281335,"results":"23","hashOfConfig":"24"},{"size":899,"mtime":1608473281207,"results":"25","hashOfConfig":"24"},{"size":963,"mtime":1608473281391,"results":"26","hashOfConfig":"24"},{"size":1681,"mtime":1608473281256,"results":"27","hashOfConfig":"24"},{"size":3493,"mtime":1608485381714,"results":"28","hashOfConfig":"24"},{"size":315,"mtime":1608473281279,"results":"29","hashOfConfig":"24"},{"size":2784,"mtime":1608481674451,"results":"30","hashOfConfig":"24"},{"size":540,"mtime":1608473281252,"results":"31","hashOfConfig":"24"},{"size":479,"mtime":1608487022957,"results":"32","hashOfConfig":"24"},{"size":0,"mtime":1608473281212,"results":"33","hashOfConfig":"24"},{"size":281,"mtime":1608473281347,"results":"34","hashOfConfig":"24"},{"size":3230,"mtime":1608473281211,"results":"35","hashOfConfig":"24"},{"size":236,"mtime":1608473281338,"results":"36","hashOfConfig":"24"},{"size":8680,"mtime":1608559093762,"results":"37","hashOfConfig":"24"},{"size":1709,"mtime":1608473281340,"results":"38","hashOfConfig":"24"},{"size":7361,"mtime":1608485257849,"results":"39","hashOfConfig":"24"},{"size":2462,"mtime":1608505266369,"results":"40","hashOfConfig":"24"},{"size":1510,"mtime":1608505266406,"results":"41","hashOfConfig":"24"},{"size":1883,"mtime":1608505266407,"results":"42","hashOfConfig":"24"},{"size":433,"mtime":1608473281350,"results":"43","hashOfConfig":"24"},{"size":1704,"mtime":1608473281388,"results":"44","hashOfConfig":"24"},{"size":80,"mtime":1608473281345,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"jv4j5q",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\mern\\appvente\\client\\src\\index.js",[],["99","100"],"E:\\mern\\appvente\\client\\src\\App.js",["101"],"\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Signup from './Pages/Signup';\r\nimport Signin from './Pages/Signin';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Sidebare from './Components/Layout/Sidebar';\r\nimport Profile from './Pages/Profile';\r\nimport Welcom from './Pages/Welcom';\r\nimport Announce from './Pages/Announce';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={Welcom} />\r\n        <Route path='/Dashboard' component={Dashboard} />\r\n        <Route path='/register' component={Signup} />\r\n        <Route path='/login' component={Signin} />\r\n        <Route path='/profile' component={Profile} />\r\n        <Route path='/announce' component={Announce}/>\r\n        \r\n      </Switch>\r\n    </BrowserRouter>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","E:\\mern\\appvente\\client\\src\\js\\store\\index.js",[],"E:\\mern\\appvente\\client\\src\\Pages\\Dashboard.js",["102"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUser } from \"../js/actions/actionUser\";\r\nimport { useEffect } from \"react\";\r\nimport PostProfile from \"../Components/Profile/PostProfile\";\r\nimport { getOwnerProfile, } from \"../js/actions/actionprofile\";\r\nimport { Spinner } from 'reactstrap';\r\nimport FlashMessage from \"react-flash-message\";\r\nimport \"./Dashboard.css\"\r\nimport NavbarPage from \"../Components/Layout/Navbar\";\r\n\r\nconst Dashboard = () => {\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const loadUser = useSelector((state) => state.userReducer.loadUser);\r\n const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const dispatch = useDispatch();\r\n \r\n  useEffect(() => {\r\n    dispatch(getOwnerProfile());\r\n    dispatch(getUser());\r\n  }, []);\r\n  if ( loadProfile &&loadUser) {\r\n    return (\r\n      <>\r\n        <NavbarPage />\r\n        <Spinner style={{\r\n        position: 'absolute', left: '50%', top: '50%',\r\n        \r\n        }}\r\n          color=\"primary\" />\r\n      </>\r\n    );\r\n  } else if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <NavbarPage />\r\n        <FlashMessage duration={2000}>\r\n          <div className=\"alert alert-info\" role=\"alert\">\r\n            Welcome {user.name} we are happy to see you\r\n          </div>\r\n        </FlashMessage>\r\n        {!profile ? <div className=\"design-postProfile\"><PostProfile/></div>: <h1>announce</h1>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","E:\\mern\\appvente\\client\\src\\Pages\\Signup.js",["103"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { UncontrolledAlert } from 'reactstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../js/actions/actionUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toggleTrue } from \"../js/actions/actionToggle\";\r\nconst Signup = () => {\r\n  const loadUser = useSelector((state) => state.userReducer.loadUser);\r\n  const user = useSelector((state) => state.userReducer.user);\r\n  const errors = useSelector((state) => state.userReducer.errors);\r\n\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [phoneNumber, setPhoneNumber] = useState();\r\n\r\n  const addUser = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n        phoneNumber,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"row mt-5 \">\r\n      <div className=\"col-md-6 m-auto\">\r\n        <div className=\"card card-body\">\r\n          <h1 className=\"text-center mb-3\">\r\n            <i className=\"fas fa-user-plus\"></i>\r\n            Register\r\n          </h1>\r\n          \r\n          {loadUser ? (\r\n            <div className=\"alert alert-info\" role=\"alert\">\r\n              Please wait\r\n            </div>\r\n          ) :Array.isArray(errors&&errors.errors)===true\r\n          ? errors.errors.map((e, i) => (\r\n            <UncontrolledAlert key={i} color=\"danger\">\r\n             <strong>{e.param}</strong> ${e.msg}.\r\n            </UncontrolledAlert>\r\n              ))\r\n          : (user) ? (\r\n            <Redirect to=\"/login\" />\r\n          ) : null}\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control-plaintext\"\r\n              name=\"name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"name...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control-plaintext border\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"email...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control-plaintext\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"password...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>phoneNumber</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control-plaintext\"\r\n              name=\"phoneNumber\"\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              placeholder=\"phone Number...\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-block\"\r\n            onClick={addUser}\r\n          >\r\n            Register\r\n          </button>\r\n          <p className=\"lead mt-4\">\r\n            Have An Account? <a href=\"/login\">Login</a> Go Home?{\" \"}\r\n            <a href=\"/\">Home</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Signup;\r\n","E:\\mern\\appvente\\client\\src\\Pages\\Welcom.js",[],"E:\\mern\\appvente\\client\\src\\Pages\\Signin.js",["104"],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../js/actions/actionUser\";\r\nimport { toggleFalse } from \"../js/actions/actionToggle\";\r\nimport { UncontrolledAlert } from 'reactstrap';\r\nconst Signin = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loadUser = useSelector((state) => state.userReducer.loadUser);\r\n  const errors = useSelector((state) => state.userReducer.errors);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const loginUser = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      login({\r\n        email,\r\n        password,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-md-6 m-auto\">\r\n        <div className=\"card card-body\">\r\n          <h1 className=\"text-center mb-3\">\r\n            <i className=\"fas fa-sign-in-alt\"></i> Login\r\n          </h1>\r\n         \r\n          {localStorage.getItem(\"token\") ? (\r\n            <Redirect to=\"/Dashboard\" />\r\n          ) : loadUser ? (\r\n            <div className=\"alert alert-info\" role=\"alert\">\r\n              Please wait\r\n            </div>\r\n          ) : errors ? (<>\r\n            <FlashMessage duration={1000}>\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                Check Again\r\n              </div>\r\n                </FlashMessage>\r\n                <UncontrolledAlert color=\"info\">\r\n                <strong>{errors.msg}</strong>\r\n               </UncontrolledAlert></>\r\n          ) : null}\r\n\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-block\"\r\n            onClick={loginUser}\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p className=\"lead mt-4\">\r\n            No Account? <a href=\"/register\">Register</a>\r\n            Go Home? <a href=\"/\">Home</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","E:\\mern\\appvente\\client\\src\\Pages\\Announce.js",["105"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport NavebarePage from '../Components/Layout/Navbar'\r\nconst Announce = () => {\r\n      const token = localStorage.getItem(\"token\");\r\n  \r\n      if (!token) {\r\n            return <Redirect to=\"/\" />\r\n      } else {\r\n            return (\r\n                  <div>\r\n                        <NavebarePage />\r\n                       ghfghfg\r\n                  </div>\r\n            )\r\n      }\r\n      \r\n}\r\n\r\nexport default Announce\r\n","E:\\mern\\appvente\\client\\src\\Pages\\Profile.js",[],"E:\\mern\\appvente\\client\\src\\Components\\Layout\\Sidebar.js",[],"E:\\mern\\appvente\\client\\src\\js\\reducers\\index.js",[],"E:\\mern\\appvente\\client\\src\\Components\\Layout\\Navbar.js",["106","107"],"import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBContainer,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { EmptyUser, logout } from \"../../js/actions/actionUser\";\r\nimport { EmptyProfile, getOwnerProfile } from \"../../js/actions/actionprofile\";\r\n\r\nimport \"./Navbar.css\";\r\nconst NavbarPage = () => {\r\n  const [state, setState] = useState({\r\n    collapseID: \"\",\r\n  });\r\n  const toggleCollapse = (collapseID) => () =>\r\n    setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n\r\n  return (\r\n    <MDBNavbar dark expand=\"md\" style={{ backgroundColor: \"#32325d\" }}>\r\n      <MDBNavbarBrand>\r\n        <strong className=\"white-text\">DASHBOARD</strong>\r\n      </MDBNavbarBrand>\r\n      <MDBNavbarToggler onClick={toggleCollapse(\"navbarCollapse3\")} />\r\n      <MDBCollapse id=\"navbarCollapse3\" isOpen={state.collapseID} navbar>\r\n        <MDBNavbarNav right>\r\n          {!profile ?<MDBNavItem>\r\n            <MDBNavLink className=\"waves-effect waves-light\" to=\"/login\">\r\n              <i className=\"fas fa-sign-in-alt\"></i>\r\n              SignIn\r\n            </MDBNavLink>\r\n          </MDBNavItem>: <h1>autre acces</h1>}\r\n        {!profile ?  <MDBNavItem>\r\n            <MDBNavLink className=\"waves-effect waves-light\" to=\"/register\">\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              SignUp\r\n            </MDBNavLink>\r\n          </MDBNavItem>:<h1>autre access</h1> }\r\n\r\n          {profile ? (\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" className=\"mr-1\" />\r\n                  Profile\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                  <MDBDropdownItem>\r\n                    <Link\r\n                      to=\"profile\"\r\n                      onClick={() => {\r\n                        dispatch(getOwnerProfile());\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      My Profile\r\n                    </Link>\r\n                  </MDBDropdownItem>\r\n                  <MDBDropdownItem\r\n                    onClick={() => {\r\n                      dispatch(logout());\r\n                      dispatch(EmptyProfile());\r\n                      dispatch(EmptyUser());\r\n                      history.push(\"/\");\r\n                    }}\r\n                  >\r\n                    Log out\r\n                  </MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          ) : null}\r\n        </MDBNavbarNav>\r\n      </MDBCollapse>\r\n    </MDBNavbar>\r\n  );\r\n};\r\n\r\nexport default NavbarPage;\r\n","E:\\mern\\appvente\\client\\src\\js\\actions\\actionToggle.js",[],"E:\\mern\\appvente\\client\\src\\Components\\Profile\\GetProfile.js",["108"],"E:\\mern\\appvente\\client\\src\\js\\actions\\actionUser.js",[],"E:\\mern\\appvente\\client\\src\\Components\\Profile\\PostProfile.js",["109","110"],"import React, { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { postProfile } from \"../../js/actions/actionprofile\";\r\nimport FlashMessage from \"react-flash-message\";\r\nimport \"./PostProfile.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 60,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nconst PostProfile = () => {\r\n  const classes = useStyles();\r\n  const [country, setCountry] = useState(\"\");\r\n  const [location, setLocation] = useState();\r\n  const [adresse, setAdresse] = useState();\r\n  const [farmerDomaine, setFarmerDomaine] = useState();\r\n  const [image, setImage] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const data = new FormData();\r\n  data.append(\"location\", location);\r\n  data.append(\"adresse\", adresse);\r\n  data.append(\"farmerDomaine\", farmerDomaine);\r\n  data.append(\"image\", image);\r\n\r\n  const handleChange = (e) => {\r\n    setCountry(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const userName = useSelector(state => state.userReducer.user.name);\r\n  const profile = useSelector((state) => state.profileReducer.profile);\r\n  const loadProfile = useSelector((state) => state.profileReducer.loadProfile);\r\n  const errors = useSelector((state) => state.profileReducer.errors);\r\n  return (\r\n    <>\r\n      {loadProfile ? (\r\n        <Alert variant=\"filled\" severity=\"info\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"2%\",\r\n          right: \"0%\",\r\n       \r\n      }}\r\n        >\r\n        Please Wait\r\n      </Alert>\r\n            \r\n      ) : errors ? (\r\n          <div  style={{\r\n            position: \"fixed\",\r\n            bottom: \"2%\",\r\n            right: \"0%\",\r\n         \r\n        }}>\r\n          <FlashMessage duration={1000}\r\n            \r\n          >\r\n            <Alert variant=\"filled\" severity=\"error\" >\r\n             {errors.message}\r\n           </Alert>\r\n            </FlashMessage>\r\n            </div>\r\n          ):null\r\n      }\r\n    <div className=\"design_post registration-form\"  >\r\n      <h4 className=\"design_title\">BUILD YOUR PROFILE</h4>\r\n      <p className=\"design_info\">\r\n        This information will let us know more about you <i>{userName}</i> .\r\n      </p>\r\n\r\n      <div className=\"design-coordonation\" style={{position:\"relative\"}} >\r\n        <div className=\"design-input-image\">\r\n          <div className=\"form-icon\">\r\n            {image ? (\r\n              <img src={URL.createObjectURL(image)} className=\"form-icon\" />\r\n            ) : (\r\n              <span>\r\n                <i className=\"icon icon-user\" />\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div\r\n            className=\"file-upload\"\r\n            style={{ position:\"relative\", display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"icon-button-file\"\r\n              type=\"file\"\r\n             \r\n              onChange={(event) => {\r\n                const file = event.target.files[0];\r\n\r\n                setImage(file);\r\n              }}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"design-other-input\"  >\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel  id=\"demo-controlled-open-select-label\">\r\n              Location\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n             \r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={country}\r\n              onChange={(e) => {\r\n                handleChange(e);setLocation(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Béja\"}>Béja</MenuItem>\r\n              <MenuItem value={\"Bizerte\"}>Bizerte</MenuItem>\r\n              <MenuItem value={\"Gabès\"}>Gabès</MenuItem>\r\n              <MenuItem value={\"Gafsa\"}>Gafsa</MenuItem>\r\n              <MenuItem value={\"Jendouba\"}>Jendouba</MenuItem>\r\n              <MenuItem value={\"Kairouan\"}>Kairouan</MenuItem>\r\n              <MenuItem value={\"Kasserine\"}>Kasserine</MenuItem>\r\n              <MenuItem value={\"Kebili\"}>Kebili</MenuItem>\r\n              <MenuItem value={\"Manouba\"}>Manouba</MenuItem>\r\n              <MenuItem value={\"Medenine\"}>Medenine</MenuItem>\r\n              <MenuItem value={\"Monastir\"}>Monastir</MenuItem>\r\n              <MenuItem value={\"Nabeul\"}>Nabeul</MenuItem>\r\n              <MenuItem value={\"Sfax\"}>Sfax</MenuItem>\r\n              <MenuItem value={\"Sidi Bouzid\"}>Sidi Bouzid</MenuItem>\r\n              <MenuItem value={\"Siliana\"}>Siliana</MenuItem>\r\n              <MenuItem value={\"Sousse\"}>Sousse</MenuItem>\r\n              <MenuItem value={\"Tataouine\"}>Tataouine</MenuItem>\r\n              <MenuItem value={\"Tozeur\"}>Tozeur</MenuItem>\r\n              <MenuItem value={\"Tunis\"}>Tunis</MenuItem>\r\n              <MenuItem value={\"Ariana\"}>Ariana</MenuItem>\r\n              <MenuItem value={\"Zaghouan\"}>Zaghouan</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setAdresse(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Adresse\"\r\n            />\r\n          </form>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              onChange={(e) => {\r\n                setFarmerDomaine(e.target.value);\r\n              }}\r\n              id=\"standard-basic\"\r\n              label=\"Farmer Domaine\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-block create-account\"\r\n          onClick={() => dispatch(postProfile(data))}\r\n        >\r\n          Submit Profile\r\n        </button>\r\n      </div>\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default PostProfile;\r\n","E:\\mern\\appvente\\client\\src\\js\\actions\\actionprofile.js",["111"],"import {\r\n  POST_PROFILE,\r\n  POST_PROFILE_SUCCESS,\r\n  POST_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE,\r\n  GET_OWNER_PROFILE_FAIL,\r\n  GET_OWNER_PROFILE_SUCCESS,\r\n  EMPTY_PROFILE,\r\n  DELETE_PROFILE_SUCCESS,\r\n  DELETE_PROFILE_FAIL,\r\n  EDIT_PROFILE,\r\n  EDIT_PROFILE_SUCCESS,\r\n  EDIT_PROFILE_FAIL,\r\n} from \"../constants/action-types.js\";\r\nimport axios from \"axios\";\r\nimport { EmptyUser } from \"./actionUser.js\";\r\n\r\n// post profile\r\nexport const postProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: POST_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: POST_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: POST_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// update profile\r\nexport const editProfile = (user) => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: EDIT_PROFILE });\r\n  try {\r\n    const result = await axios.post(\"/profile\", user, config);\r\n\r\n    dispatsh({ type: EDIT_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({\r\n      type: EDIT_PROFILE_FAIL,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n// get owner profile\r\n\r\nexport const getOwnerProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  dispatsh({ type: GET_OWNER_PROFILE });\r\n  try {\r\n    const result = await axios.get(\"/profile/owner\", config);\r\n    dispatsh({ type: GET_OWNER_PROFILE_SUCCESS, payload: result.data });\r\n  } catch (error) {\r\n    dispatsh({ type: GET_OWNER_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\n// delete profile\r\nexport const deleteProfile = () => async (dispatsh) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  \r\n  try {\r\n     const result = await axios.delete(\"/profile\",config);\r\n    dispatsh({ type: DELETE_PROFILE_SUCCESS ,payload:result.data.msg});\r\n  } catch (error) {\r\n    dispatsh({ type: DELETE_PROFILE_FAIL, payload: error.response.data });\r\n  }\r\n};\r\nexport const EmptyProfile = () => {\r\n  return { type: EMPTY_PROFILE };\r\n};\r\n","E:\\mern\\appvente\\client\\src\\js\\constants\\action-types.js",[],"E:\\mern\\appvente\\client\\src\\js\\reducers\\profileReducer.js",[],"E:\\mern\\appvente\\client\\src\\js\\reducers\\toggleReducer.js",[],"E:\\mern\\appvente\\client\\src\\js\\reducers\\userReducer.js",[],"E:\\mern\\appvente\\client\\src\\js\\constants\\toggle-type.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":23,"column":6,"nodeType":"122","endLine":23,"endColumn":8,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":20},{"ruleId":"116","severity":1,"message":"125","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"116","severity":1,"message":"126","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"127","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"128","line":14,"column":3,"nodeType":"118","messageId":"119","endLine":14,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":64,"column":11,"nodeType":"131","endLine":64,"endColumn":67},{"ruleId":"116","severity":1,"message":"132","line":62,"column":9,"nodeType":"118","messageId":"119","endLine":62,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":106,"column":15,"nodeType":"131","endLine":106,"endColumn":77},{"ruleId":"116","severity":1,"message":"133","line":16,"column":10,"nodeType":"118","messageId":"119","endLine":16,"endColumn":19},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Sidebare' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'toggleTrue' is defined but never used.","'toggleFalse' is defined but never used.","'useSelector' is defined but never used.","'Component' is defined but never used.","'MDBContainer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'profile' is assigned a value but never used.","'EmptyUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [dispatch]",{"range":"139","text":"140"},[958,960],"[dispatch]"]